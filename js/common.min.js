window.onload = function () {


    var
        status = false,
        body = $("body"),
        active = "active",
        hidden = "hidden",
        btnsGroup = $(".buttons_group"),
        btnEmail = $(".btn_email"),
        btnTelephone = $(".btn_tel"),
        labelForms = $(".bl_form__label"),

        inputEmail = $(".js-input-email"),
        inputTelephone = $(".js-input-tel"),
        validationVal = false,
        timeTimeout = 800,


        fildErrEmail = $(".js-icon-email"),
        fildErrTel = $(".js-icon-tel"),


        iconInfo = "icon-info",
        iconError = "icon-error",
        iconCorrected = "icon-correct",
        allIcons = "icon-info icon-error icon-correct",

        statusEmail = false,
        statusTelephone = false

    ;


    var adressToRedirect = "https://www.ukr.net"; /// Сюда вписывай куда будешь отсылать пользователя

    var errorsEmail = {
        errorEmail: "Что-то пошло не так… <br> Ты забыл @ или точку.",
        alreadyRegEmail: "Такой email уже зарегистрирован. <br> У тебя уже есть аккаунт? <a href=" + adressToRedirect + ">Войти</a>"
    };

    var errorsTel = {
        errorTel: "Неправильный формат ввода телефона.",
        alreadyRegTel: "Такой телефон уже зарегистрирован. <br> У тебя уже есть аккаунт? <a href=" + adressToRedirect + ">Войти</a>"
    };


    $(".text_form").on("click", function () {

        // $(this).siblings(".bl_form__input").focus();
        $(this).remove();
    });

    inputEmail.on('keyup input', function () {

        var value = $(this).val(),
            valueLength = value.length;

        var iconForFild = $(this).siblings(".js-icon-email");
        var erorFilds = $(this).siblings(".bl_form__errors");

        var checkReg = isValidEmailAddress(value);

        if (valueLength >= 4) {

            console.log(value);

            /// После 4-го введенного символа, делаем задержку timeTimeout проверяем регуляркой, дальше впихивай проверку AJAX

            setTimeout(function () {


                if (checkReg !== true) {
                    console.log("you're have problem");

                    inputEmail.addClass("input_error");
                    addRightIcon(iconError);

                    erorFilds.removeClass(hidden).html(errorsEmail.errorEmail);

                    // Сюда впихивай свою AJAX проверочку на совпадение в базе данных ... если совпадение есть erorFilds.removeClass(hidden).html(errorsEmail.alreadyRegEmail);  iconForFild.addClass("icon-info");

                } else {
                    inputEmail.removeClass("input_error");


                    iconForFild.removeClass(allIcons);
                    iconForFild.addClass(iconCorrected);


                    erorFilds.addClass(hidden);

                    console.log("you are best");

                    return  statusEmail = true;

                }

            }, timeTimeout)

        }


        function addRightIcon(icon) {
            iconForFild.removeClass(allIcons);
            iconForFild.addClass(icon);
        }

    });

    inputTelephone.on('keyup input', function () {

        var value = $(this).val(),
            valueLength = value.length;

        var iconForFild = $(this).siblings(".js-icon-tel");
        var erorFilds = $(this).siblings(".bl_form__errors");
        var checkReg = isValidTelephone(value);


        if (valueLength >= 4) {

            console.log(value);

            /// После 4-го введенного символа, делаем задержку timeTimeout проверяем регуляркой, дальше впихивай проверку AJAX

            setTimeout(function () {


                if (checkReg !== true) {   ///* возможно надо будет переделать регулярку
                    console.log("you're have problem");

                    inputTelephone.addClass("input_error");
                    addRightIcon(iconError);

                    erorFilds.removeClass(hidden).html(errorsTel.errorTel);

                    setTimeout(function () {
                        $(".js-input-tel").val(" "); //// Чистим поле если это не число,
                        inputTelephone.removeClass("input_error");
                        iconForFild.removeClass(allIcons);
                        erorFilds.addClass(hidden);
                    }, 1000)




                    // Сюда впихивай свою AJAX проверочку на совпадение в базе данных ... если совпадение есть erorFilds.removeClass(hidden).html(errorsEmail.alreadyRegEmail);  iconForFild.addClass("icon-info");

                } else {
                    inputTelephone.removeClass("input_error");


                    iconForFild.removeClass(allIcons);
                    iconForFild.addClass(iconCorrected);


                    erorFilds.addClass(hidden);

                    console.log("you are best");
                    return  statusTelephone = true;
                }

            }, timeTimeout);

        }


        function addRightIcon(icon) {
            iconForFild.removeClass(allIcons);
            iconForFild.addClass(icon);
        }

    });

    /// Если номер больше 20 знаков, удаляем нафиг
    inputTelephone.on("blur", function () {
        var valueLength = $(this).val().length;
        var iconForFild = $(this).siblings(".js-icon-tel");

        if (valueLength >= 20) {
            $(".js-input-tel").val(" ");
            iconForFild.removeClass(allIcons);
        }
    });


    function isValidEmailAddress(emailAddress) {
        var pattern = new RegExp(
            /^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i
        );
        return pattern.test(emailAddress);
    }


    function isValidTelephone(phoneNumber) {
        /// регулярка только на цифры и спец знаков, возможно надо заменить
        var pattern = new RegExp(/[\d+#*]/);
        return pattern.test(phoneNumber);
    }

//// Trigger form inputs

    function toggleLabelForm(btn, fild, hideFild) {
        btn.on("click", function () {
            fild.addClass(active);
            hideFild.removeClass(active);
            labelForms.toggleClass(hidden);
        });
    }

    toggleLabelForm(btnEmail, btnEmail, btnsGroup);
    toggleLabelForm(btnTelephone, btnsGroup, btnEmail);


    function submitForm() {
        if((statusTelephone===true)||(statusEmail===true)) status = true;
        return status;
    }


    $(".bl_form").submit(function (e) {

        e.preventDefault();

        // check if the input is valid
        if (!submitForm()) {

            labelForms.addClass("text_form__erorr");

            setTimeout(function () {
                $(".text_form__erorr").removeClass("text_form__erorr");
            },  2500);

        } else {
            // send your hero to the King

            alert("Ты красавчик, всё заполнил правильно!");
        }


    });


    ///////// AncorToTop


    $('.btn_submitForm__toTop').click(function () {
        $('body,html').animate({
            scrollTop: 0
        }, 400);

        $(".text_form").click();
        inputEmail.focus();

        return false;
    });



    $(window).scroll(function () {


        var ancor = $(".btn_submitForm__toTop"),
            // windowHeight = $(window).height() / 2;
            heightToAncor = ancor.offset().top + ancor.outerHeight();

        console.log("heightToAncor =" + heightToAncor);

        if ($(this).scrollTop() > heightToAncor) {
            ancor.removeClass("hidden");
        } else {
            ancor.addClass("hidden");
        }

    });


};


