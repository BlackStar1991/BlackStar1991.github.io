// https://github.com/uxitten/polyfill/blob/master/string.polyfill.js
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart
if (!String.prototype.padStart) {
    String.prototype.padStart = function padStart(targetLength, padString) {
        targetLength = targetLength >> 0; //truncate if number, or convert non-number to 0;
        padString = String(typeof padString !== 'undefined' ? padString : ' ');
        if (this.length >= targetLength) {
            return String(this);
        } else {
            targetLength = targetLength - this.length;
            if (targetLength > padString.length) {
                padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
            }
            return padString.slice(0, targetLength) + String(this);
        }
    };
}

// jshint esnext:true
window.onload = function () {

    console.log("number 999");

    var
        body = $("body"),
        hidden = "hidden",
        active = "active";
    var finishedNumber = 2;

    function changeRegisterMethod(btn, fild) {
        btn.on("click", function () {
            $(".bl_form__text").removeClass(active);
            $(this).addClass(active);
            $(".bl_form__label").addClass(hidden);
            fild.removeClass(hidden);
        });
    }

    changeRegisterMethod($(".btn_email"), $(".label_email"));
    changeRegisterMethod($(".btn_tel"), $(".label_phone"));

    ///// Version browser
    function iOSversion() {

        if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {
            if (!!window.indexedDB) { return 'iOS 8 and up'; }
            if (!!window.SpeechSynthesisUtterance) { return 'iOS 7'; }
            if (!!window.webkitAudioContext) { return 'iOS 6'; }
            if (!!window.matchMedia) { return 'iOS 5'; }
            if (!!window.history && 'pushState' in window.history) { return 'iOS 4'; }
            return 'iOS 3 or earlier';
        }

        return 'Not an iOS device';
    }


    console.log( "versionIOS = " + iOSversion() );




    ///// COUNTER
    function animationCounter() {
        var FONT = {
            '0': 0b011010011001100110010110,
            '1': 0b001001100010001000100111,
            '2': 0b011010010001001001001111,
            '3': 0b111100010010000110010110,
            '4': 0b001001101010111100100010,
            '5': 0b111110001110000110010110,
            '6': 0b011010001110100110010110,
            '7': 0b111100010010010001000100,
            '8': 0b011010010110100110010110,
            '9': 0b011010011001011100010110
        };
        var cnvs = document.querySelector('canvas');
        cnvs.width = 177;
        cnvs.height = 42;
        cnvs.ctx = cnvs.getContext('2d');

        var counter = 0;

        loop();

        function loop() {

            var d = 6,
                r = d / 2,
                inc = d * 0.8;

            if (body.width() <= 768) {
                cnvs.width = 190;
                cnvs.height = 36;
            }
            else if (body.width() <= 600) {
                cnvs.width = 172;
                cnvs.height = 32;
                d = 4;
            }
            else if (body.width() <= 450) {
                cnvs.width = 164;
                cnvs.height = 30;
                d = 4;
            }
            else if (body.width() < 400) {
                cnvs.width = 164;
                cnvs.height = 30;
                d = 4;
            }


            cnvs.ctx.fillStyle = '#2223';
            cnvs.ctx.fillRect(0, 0, cnvs.width, cnvs.height);
            var idx, rx, x, y, shift, mask, bit;
            var cs = String(counter).padStart(7, '1256090');

            for (var i in cs) {
                shift = i * d * 4;
                x = 0;
                y = inc;
                bit = 24;
                if (mask = FONT[cs.charAt(i)]) {
                    while (--bit >= 0) {
                        idx = 23 - bit;
                        if ((idx % 4 === 0) && idx) {
                            x = 0;
                            y += inc;
                        }
                        rx = shift + (x += inc);

                        if (!rx || !r) {
                            continue;
                        }

                        var gDot = cnvs.ctx.createRadialGradient(
                             rx + r, y + r, r * 0.45, rx + r, y + r, d * 0.58
                         );

                        gDot.addColorStop(0, (mask & (1 << bit)) ? '#0BFF00' : '#00170C');

                        try {
                            gDot.addColorStop(1, '#0000');
                        }
                        catch(error) {

                        }
                        cnvs.ctx.fillStyle = gDot;
                        cnvs.ctx.fillRect(rx - r, y - r, d + r, d + r);
                    }
                }
            }
            counter++;
        }
        setInterval(loop, 400);
    }


    animationCounter();



    /////////// ANIMATION

    var results = {
        machine1: document.querySelector('#machine1Result'),
        machine2: document.querySelector('#machine2Result'),
        machine3: document.querySelector('#machine3Result')
    };
    var el1 = document.querySelector('#machine1');
    var el2 = document.querySelector('#machine2');
    var el3 = document.querySelector('#machine3');


    var finishedNumber = 2;


    var machine1 = new SlotMachine(el1, {
        active: 1,  //////// Какой элемент виден изначально
        spins: 4,
        direction: "down",
        delay: 500,

        randomize() {
            return finishedNumber;
        }
    });
    var machine2 = new SlotMachine(el2, {
        active: 4,  //////// Какой элемент виден изначально
        spins: 4,
        delay: 500,
        direction: "down",
        randomize() {
            return finishedNumber;
        }
    });

    var machine3 = new SlotMachine(el3, {
        active: 3,  //////// Какой элемент виден изначально
        spins: 4,
        delay: 500,
        direction: "down",
        randomize() {
            return finishedNumber;
        }
    });

    var btnStart = $(".js-start");



    btnStart.one("click", function () {

        var mainPhrase = $(".js-mainPhrase"),
            btn_bonus = $(".btn_bonus"),

            timeStep1 = 4000,
            timeStep2 = timeStep1 + 1000,
            timeStep2_1 = timeStep2 - 1000,
            timeStep3 = timeStep2 + 4000;


        /////////////

        /////// Юзер попадает на лендинг и нажимает на кнопку "Старт"
        /////////Слот крутиться, выпадает первая линия("777"). Иконка с бонусом 225 фриспинов меняет цвет(с серого на фиолетовый(на макете видно))


        function stepOne() {
            machine1.shuffle(5);
            machine2.shuffle(6);
            machine3.shuffle(8);

            setTimeout(function () {
                btn_bonus.eq(0).addClass(active);
                mainPhrase.addClass(hidden);
                mainPhrase.eq(1).removeClass(hidden);

            }, timeStep1);
        }

        stepOne();


        //////// СРАЗУ!!! слот начинает крутиться опять и выпадает вторая линия("3 короля"). Иконка с бонусом 150% на 1-й депозит меняет цвет.
        function stepTwo() {

            setTimeout(function () {


                var finishedNumber = 0;

                machine1.shuffle(5);
                machine2.shuffle(6);
                machine3.shuffle(5);

                setTimeout(function () {
                    btn_bonus.eq(1).addClass(active);
                    mainPhrase.addClass(hidden);
                    mainPhrase.eq(2).removeClass(hidden);
                }, timeStep2_1);

            }, timeStep2);

        }

        stepTwo();


        // //////////СРАЗУ!!! открывается форма регистрации. Форма регистрация имеет 1 поле для ввода email.


        function stepThree() {

            setTimeout(function () {

                $(".coverLayer").removeClass(hidden).addClass("coverLayer_animation"); /// 200ms
                $(".bl_popup").removeClass(hidden); /// 500ms + d200ms
            }, timeStep3);
        }

        stepThree();

        ///////////////////////
    });


////////////////

};


