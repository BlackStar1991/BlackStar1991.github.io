// jshint esnext:true
window.onload = function () {

    var
        body = $("body"),
        hidden = "hidden",
        active = "active",
        coverLayer = $(".coverLayer"),
        blockBadSpin = $(".bl_badSpin"),
        blockPopup = $(".bl_popup"),
        btnClosePopup = $(".btn_close__badSpin");


    function closeAllPopup(coverLayer, currentPopup) {
        coverLayer.addClass(hidden).removeClass("coverLayer_animation");
        currentPopup.addClass(hidden);
    }

    btnClosePopup.on("click", function () {
        closeAllPopup(coverLayer, blockBadSpin);
    });


    coverLayer.on("click", function () {
        closeAllPopup(coverLayer, blockBadSpin);
        closeAllPopup(coverLayer, blockPopup);
    });


    /// PARALAX

    if (body.width() > 1200) {


        var $poster = $('.bl_badSpin__wrapper'),

            w = $(window).width(), //window width
            h = $(window).height(); //window height

        $(window).on('mousemove', function (e) {
            var offsetX = 0.5 - e.pageX / w, //cursor position X
                offsetY = 0.5 - e.pageY / h, //cursor position Y
                dy = e.pageY - h / 2, //@h/2 = center of poster
                dx = e.pageX - w / 2, //@w/2 = center of poster
                theta = Math.atan2(dy, dx), //angle between cursor and center of poster in RAD
                angle = theta * 180 / Math.PI - 90, //convert rad in degrees
                offsetPoster = $poster.data('offset'),
                transformPoster = 'translateY(' + -offsetX * offsetPoster + 'px) rotateX(' + (-offsetY * offsetPoster) + 'deg) rotateY(' + (offsetX * (offsetPoster * 2)) + 'deg)'; //poster transform

            //get angle between 0-360
            if (angle < 0) {
                angle = angle + 360;
            }

            //poster transform
            $poster.css('transform', transformPoster);

        });
    }

    function changeRegisterMethod(btn, fild) {
        btn.on("click", function () {
            $(".bl_form__text").removeClass(active);
            $(this).addClass(active);
            $(".bl_form__label").addClass(hidden);
            fild.removeClass(hidden);
        });
    }

    changeRegisterMethod($(".btn_email"), $(".label_email"));
    changeRegisterMethod($(".btn_tel"), $(".label_phone"));


    /// Simple Validation

    var errorMessage = {
        emptyFild: "Поле должно быть заполнено",
        littleNumber: "Это не похоже на телефон",
        incorrectEmail: "Поле email должно быть заполненно корректно",
        incorrectTel: "Поле телефона должно содержать только цифры",
    };
    var statusEmail = false,
        statusTel = false;

    var errorClassEffect = "errorClassEffect";

    $(".js-input-email").on("blur", function () {

        var fild = $(this),
            fildValue = fild.val(),
            checkReg = isValidEmailAddress(fildValue),
            parrentBlock = fild.parent(".bl_form__label"),
            valueLength = fild.val().length;

        if (valueLength === 0) {
            showFildError(parrentBlock, errorMessage.emptyFild)
        }

        else if (checkReg !== true) {
            showFildError(parrentBlock, errorMessage.incorrectEmail);
        } else {
            statusEmail = true;
            return statusEmail;
        }
        setTimeout(function () {
            clearFildError(fild)
        }, 3000);

    });


    $(".js-input-tel").on("blur", function () {

        var fild = $(this),
            fildValue = fild.val(),
            parrentBlock = fild.parent(".bl_form__label"),
            valueLength = fild.val().length;

        if (valueLength === 0) {
            showFildError(parrentBlock, errorMessage.emptyFild)
        }

        else if (valueLength < 7) {
            showFildError(parrentBlock, errorMessage.littleNumber)
        } else {
            statusTel = true;
            return statusTel;
        }
        setTimeout(function () {
            clearFildError(fild)
        }, 3000);

    });


    function showFildError(parrentBlock, errorText) {
        parrentBlock.addClass(errorClassEffect);
        parrentBlock.children(".bl_form__errors").addClass(active).html(errorText);
    }


    function isValidEmailAddress(emailAddress) {
        var pattern = new RegExp(
            /^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i
        );
        return pattern.test(emailAddress);
    }

    $(".js-input-tel").bind("change keyup input click", function () {
        if (this.value.match(/[^0-9+#*]/g)) {
            this.value = this.value.replace(/[^0-9+#*]/g, '');
        }

    });

    function clearFildError(fild) {
        fild.parent(".bl_form__label").removeClass(errorClassEffect);
        fild.siblings(".bl_form__errors").removeClass(active).html("");
    }

    ///// COUNTER
    // function animationCounter() {
    //     var FONT = {
    //         '0': 0b011010011001100110010110,
    //         '1': 0b001001100010001000100111,
    //         '2': 0b011010010001001001001111,
    //         '3': 0b111100010010000110010110,
    //         '4': 0b001001101010111100100010,
    //         '5': 0b111110001110000110010110,
    //         '6': 0b011010001110100110010110,
    //         '7': 0b111100010010010001000100,
    //         '8': 0b011010010110100110010110,
    //         '9': 0b011010011001011100010110
    //     };
    //     var cnvs = document.querySelector('canvas');
    //     cnvs.width = 177;
    //     cnvs.height = 42;
    //     cnvs.ctx = cnvs.getContext('2d');

    //     var counter = 0;

    //     loop();

    //     function loop() {

    //         var d = 6,
    //             r = d / 2,
    //             inc = d * 0.8;

    //         if (body.width() <= 768) {
    //             cnvs.width = 190;
    //             cnvs.height = 36;
    //         }
    //         else if (body.width() <= 600) {
    //             cnvs.width = 172;
    //             cnvs.height = 32;
    //             d = 4;
    //         }
    //         else if (body.width() <= 450) {
    //             cnvs.width = 164;
    //             cnvs.height = 30;
    //             d = 4;
    //         }
    //         else if (body.width() < 400) {
    //             cnvs.width = 164;
    //             cnvs.height = 30;
    //             d = 4;
    //         }


    //         cnvs.ctx.fillStyle = '#2223';
    //         cnvs.ctx.fillRect(0, 0, cnvs.width, cnvs.height);
    //         var idx, rx, x, y, shift, mask, bit;

    //         // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js
    //         // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart
    //         if (!String.prototype.padStart) {
    //             String.prototype.padStart = function padStart(targetLength, padString) {
    //                 targetLength = targetLength >> 0; //truncate if number, or convert non-number to 0;
    //                 padString = String(typeof padString !== 'undefined' ? padString : ' ');
    //                 if (this.length >= targetLength) {
    //                     return String(this);
    //                 } else {
    //                     targetLength = targetLength - this.length;
    //                     if (targetLength > padString.length) {
    //                         padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed
    //                     }
    //                     return padString.slice(0, targetLength) + String(this);
    //                 }
    //             };
    //         }


    //         var cs = String(counter).padStart(7, '1256090');

    //         for (var i in cs) {
    //             shift = i * d * 4;
    //             x = 0;
    //             y = inc;
    //             bit = 24;
    //             if (mask = FONT[cs.charAt(i)]) {
    //                 while (--bit >= 0) {
    //                     idx = 23 - bit;
    //                     if ((idx % 4 === 0) && idx) {
    //                         x = 0;
    //                         y += inc;
    //                     }
    //                     rx = shift + (x += inc);

    //                     if (!rx || !r) {
    //                         continue;
    //                     }

    //                     var gDot = cnvs.ctx.createRadialGradient(
    //                         rx + r, y + r, r * 0.45, rx + r, y + r, d * 0.58
    //                     );

    //                     gDot.addColorStop(0, (mask & (1 << bit)) ? '#0BFF00' : '#00170C');

    //                     try {
    //                         gDot.addColorStop(1, '#0000');
    //                     }
    //                     catch(error) {

    //                     }
    //                     cnvs.ctx.fillStyle = gDot;
    //                     cnvs.ctx.fillRect(rx - r, y - r, d + r, d + r);
    //                 }
    //             }
    //         }
    //         counter++;
    //     }
    //     setInterval(loop, 400);
    // }


    // animationCounter();


    /////////// ANIMATION

    var results = {
        machine1: document.querySelector('#machine1Result'),
        machine2: document.querySelector('#machine2Result'),
        machine3: document.querySelector('#machine3Result')
    };
    var el1 = document.querySelector('#machine1');
    var el2 = document.querySelector('#machine2');
    var el3 = document.querySelector('#machine3');


    var finishedNumber = 2;


    var machine1 = new SlotMachine(el1, {
        active: 1,  //////// РљР°РєРѕР№ СЌР»РµРјРµРЅС‚ РІРёРґРµРЅ РёР·РЅР°С‡Р°Р»СЊРЅРѕ
        spins: 4,
        direction: "down",
        delay: 500,

        randomize() {
            return finishedNumber;
        }
    });
    var machine2 = new SlotMachine(el2, {
        active: 4,  //////// РљР°РєРѕР№ СЌР»РµРјРµРЅС‚ РІРёРґРµРЅ РёР·РЅР°С‡Р°Р»СЊРЅРѕ
        spins: 4,
        delay: 500,
        direction: "down",
        randomize() {
            return finishedNumber;
        }
    });

    var machine3 = new SlotMachine(el3, {
        active: 3,  //////// РљР°РєРѕР№ СЌР»РµРјРµРЅС‚ РІРёРґРµРЅ РёР·РЅР°С‡Р°Р»СЊРЅРѕ
        spins: 4,
        delay: 500,
        direction: "down",
        randomize() {
            return finishedNumber;
        }
    });

    var btnStart = $(".js-start");


    btnStart.one("click", function () {


        var mainPhrase = $(".js-mainPhrase"),
            btn_bonus = $(".btn_bonus"),

            timeStep1 = 4000,
            timeStep2 = timeStep1 + 1000,
            timeStep2_1 = timeStep2 - 1000,
            timeStep3 = timeStep2 + 4000;


        /////////////


        function stepOne() {
            machine1.shuffle(5);
            machine2.shuffle(6);
            machine3.shuffle(8);

            setTimeout(function () {
                btn_bonus.eq(0).addClass(active);
                mainPhrase.addClass(hidden);
                mainPhrase.eq(1).removeClass(hidden);

            }, timeStep1);
        }

        stepOne();


        //////// РЎР РђР—РЈ!!! СЃР»РѕС‚ РЅР°С‡РёРЅР°РµС‚ РєСЂСѓС‚РёС‚СЊСЃСЏ РѕРїСЏС‚СЊ Рё РІС‹РїР°РґР°РµС‚ РІС‚РѕСЂР°СЏ Р»РёРЅРёСЏ("3 РєРѕСЂРѕР»СЏ"). РРєРѕРЅРєР° СЃ Р±РѕРЅСѓСЃРѕРј 150% РЅР° 1-Р№ РґРµРїРѕР·РёС‚ РјРµРЅСЏРµС‚ С†РІРµС‚.
        function stepTwo() {

            setTimeout(function () {

                finishedNumber = 0;

                machine1.shuffle(5);
                machine2.shuffle(6);
                machine3.shuffle(8);

                setTimeout(function () {
                    btn_bonus.eq(1).addClass(active);
                    mainPhrase.addClass(hidden);
                    mainPhrase.eq(2).removeClass(hidden);
                }, timeStep2_1);

            }, timeStep2);

        }

        stepTwo();

        // //////////РЎР РђР—РЈ!!! РѕС‚РєСЂС‹РІР°РµС‚СЃСЏ С„РѕСЂРјР° СЂРµРіРёСЃС‚СЂР°С†РёРё. Р¤РѕСЂРјР° СЂРµРіРёСЃС‚СЂР°С†РёСЏ РёРјРµРµС‚ 1 РїРѕР»Рµ РґР»СЏ РІРІРѕРґР° email.

        function stepThree() {

            setTimeout(function () {

                $(".coverLayer").removeClass(hidden).addClass("coverLayer_animation"); /// 200ms
                $(".bl_popup").removeClass(hidden); /// 500ms + d200ms
                $(".js-input-email").focus();
            }, timeStep3);
        }

        stepThree();

        ///////////////////////
    });

    // $('#login').attr('href', getLoginUrl());
    // $('#RegisterForm_password').val(generate(6));
    // $('#register').on('click', function (e) {
    //     e.preventDefault();
    //     if ($('.popup-loader').is(":visible")) {
    //         return;
    //     }
    //
    //     remoteAuthorization(e, 'king', ['Contact'], '/');
    // });


};

// function generate(len)
// {
//     var ints =[0,1,2,3,4,5,6,7,8,9];
//     var chars=['a','b','c','d','e','f','g','h','j','k','l','m','n','o','p','r','s','t','u','v','w','x','y','z'];
//     var out='';
//     for(var i=0;i<len;i++){
//         var ch=Math.random(1,2);
//         if(ch<0.5){
//             var ch2=Math.ceil(Math.random(1,ints.length)*10);
//             out+=ints[ch2];
//         }else{
//             var ch2=Math.ceil(Math.random(1,chars.length)*10);
//             out+=chars[ch2];
//         }
//     }
//     return out;
// }
//
// function getLoginUrl(){
//     var queryData = getQueryData('king');
//     var params = (queryData.params === '?') ? '?login' : queryData.params + '&login';
//     return queryData.mirror + params;
// }

