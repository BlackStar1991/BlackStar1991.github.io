$(document).ready(function () {
    var
        resident = $(".js-animation-resident"),
        bonus_btn = $(".bonus_btn"),
        hidden = "hidden",
        active = "active";


    function changeRegisterMethod(btn, fild) {
        btn.on("click", function () {
            $(".bl_form__text").removeClass(active);
            $(this).addClass(active);
            $(".bl_form__label").addClass(hidden);
            fild.removeClass(hidden);
        });
    }

    changeRegisterMethod($(".btn_email"), $(".label_email"));
    changeRegisterMethod($(".btn_tel"), $(".label_phone"));

    function showPopup(){
        $(".coverLayer").removeClass("hidden");
        $(".bl_popup").removeClass("hidden");
        // $(".js-input-email").focus();
    }


    bonus_btn.one("click", function () {
        showPopup();
    });

    resident.one("click", function () {
        if($(this).children().has(".bl_animation1")){
            showPopup();
        }
    });



    if ($(window).width() < 1441 && $(window).height() < 680 || $(window).width() < 1025 && $(window).height() < 961) {
        $('.bonuses_wrapper').slick({
            slidesToShow: 2,
            slidesToScroll: 2,
            dots: false,
            arrows: true,
            infinite: true,
            prevArrow:"<button type='button' class='slick-prev pull-left'></button>",
            nextArrow:"<button type='button' class='slick-next pull-right'></button>",
            responsive: [
                {
                    breakpoint: 767,
                    settings: {
                        dots: false
                    }
                }
            ]
        });
    }

    var errorsEmail = {
        errorEmail: "Вы указали неправильный адрес",
        alreadyRegEmail: "Такой email уже зарегистрирован. <br> У тебя уже есть аккаунт?</a>",
        errorEmpty: "Поле формы должно быть заполнено"
    };

    var errorsTel = {
        errorTel: "Неправильный формат ввода телефона.",
        alreadyRegTel: "Такой телефон уже зарегистрирован. <br> У тебя уже есть аккаунт?</a>"
    };

    var  inputEmail = $(".js-input-email"),
        inputTelephone = $(".js-input-tel"),
        status = false,
        statusEmail = false,
        statusTelephone = false,
        timeTimeout = 800,
        iconError = "icon-error",
        iconCorrected = "icon-correct",
        allIcons = "icon-info icon-error icon-correct";

    var urlLink = "https://ukr.net";

    inputEmail.on('keyup input', function () {

        var value = $(this).val(),
            valueLength = value.length;

        var iconForFild = $(this).siblings(".js-icon-email");
        var erorrFilds = $(this).siblings(".bl_form__errors");

        var checkReg = isValidEmailAddress(value);

        if (valueLength >= 4) {

            /// После 4-го введенного символа, делаем задержку timeTimeout проверяем регуляркой, дальше впихивай проверку AJAX

            setTimeout(function () {


                if (checkReg !== true) {

                    inputEmail.addClass("input_error");
                    addRightIcon(iconError);

                    erorrFilds.removeClass(hidden).html(errorsEmail.errorEmail);

                    // Сюда впихивай свою AJAX проверочку на совпадение в базе данных ... если совпадение есть erorFilds.removeClass(hidden).html(errorsEmail.alreadyRegEmail);  iconForFild.addClass("icon-info");

                } else {
                    inputEmail.removeClass("input_error");
                    inputEmail.addClass("input_confirmed");


                    iconForFild.removeClass(allIcons);
                    iconForFild.addClass(iconCorrected);


                    erorrFilds.addClass(hidden);


                    return statusEmail = true;

                }

            }, timeTimeout)

        }


        function addRightIcon(icon) {
            iconForFild.removeClass(allIcons);
            iconForFild.addClass(icon);
        }

    });

    inputTelephone.on('keyup input', function () {

        var value = $(this).val(),
            valueLength = value.length;

        var iconForFild = $(this).siblings(".js-icon-tel");
        var erorrFilds = $(this).siblings(".bl_form__errors");
        var checkReg = isValidTelephone(value);


        if (valueLength >= 4) {



            /// После 4-го введенного символа, делаем задержку timeTimeout проверяем регуляркой, дальше впихивай проверку AJAX

            setTimeout(function () {


                if (checkReg !== true) {   ///* возможно надо будет переделать регулярку


                    inputTelephone.addClass("input_error");
                    inputTelephone.removeClass("input_confirmed");
                    addRightIcon(iconError);

                    erorrFilds.removeClass(hidden).html(errorsTel.errorTel);

                    setTimeout(function () {
                        $(".js-input-tel").val(" "); //// Чистим поле если это не число,
                        inputTelephone.removeClass("input_error");
                        iconForFild.removeClass(allIcons);
                        erorrFilds.addClass(hidden);
                    }, 2000)


                    // Сюда впихивай свою AJAX проверочку на совпадение в базе данных ... если совпадение есть erorFilds.removeClass(hidden).html(errorsEmail.alreadyRegEmail);  iconForFild.addClass("icon-info");

                } else {
                    inputTelephone.removeClass("input_error");
                    inputTelephone.addClass('input_confirmed');


                    erorrFilds.addClass(hidden);

                    return statusTelephone = true;
                }

            }, timeTimeout);

        }


        function addRightIcon(icon) {
            iconForFild.removeClass(allIcons);
            iconForFild.addClass(icon);
        }

    });



    function isValidEmailAddress(emailAddress) {
        var pattern = new RegExp(
            /^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i
        );
        return pattern.test(emailAddress);
    }


    function isValidTelephone(phoneNumber) {
        /// регулярка только на цифры и спец знаков, возможно надо заменить
        var pattern = new RegExp(/[\d+#*]/);
        return pattern.test(phoneNumber);
    }


    function submitForm() {
        if((statusTelephone===true)||(statusEmail===true)) status = true;
        return status;
    }


    $(".bl_form").submit(function (e) {

        e.preventDefault();

        // check if the input is valid
        if (!submitForm()) {

            var erorFilds = $(".bl_form__errors");

            if (($(".js-input-email").val().length === 0) || ($(".js-input-tel").val().length === 0)) {
                erorFilds.removeClass(hidden).html(errorsEmail.errorEmpty);
            }

            setTimeout(function () {
                erorFilds.addClass(hidden);
                $(".text_form__erorr").removeClass("text_form__erorr");
            }, 2500);

        } else {
            // send your hero to the King

            alert("Ты красавчик, всё заполнил правильно!");
            window.open(urlLink);
        }
    });



});

