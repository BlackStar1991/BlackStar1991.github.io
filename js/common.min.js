window.onload = function () {
    $(".js-input-telephone").mask("+38(099) 999-99-99");

    var active = 'active';

    /// Simple Validation

    var errorMessage = {
        emptyFild: "Заполните поле",
        incorrectPhone: "Телефон заполнен не до конца",
        phoneNumberMatch: "Этот номер уже используется",
    };


    var inputPhone = $(".js-input-telephone"),
        currentPhoneInStoreg = localStorage.getItem('user-data');


    var wrapperForm = $(".bl_form__wrapper");

    // If user already registred phone
    if (currentPhoneInStoreg !== null) {
        $(".successBlock").removeClass("hidden");
        wrapperForm.addClass(active);
        if (getAttemptCounter() > 4){
            $('#attempt-success').text('Превышен лимит отправленых сообщений. Попробуйте позже.');
        } else {
            inputPhone.val(currentPhoneInStoreg);
            timer();
        }
    }


    var statusTel = false;
    var errorClassEffect = "errorClassEffect";


    ///////// SUBMIT FORM


    $('#re-send').click(function (e){
        e.preventDefault();
        incrementAttemptCounter();
        reSendSms('king');

    });

    $('#register').click( function (e) {
        e.preventDefault();

        var fild = $('#RegisterForm_phone'),
            parrentBlock = fild.parent(".bl_form__label"),
            valueLength = fild.val().length;
        if (valueLength === 4) {
            showFildError(parrentBlock, errorMessage.emptyFild)
        } else if (valueLength < 17) {
            showFildError(parrentBlock, errorMessage.incorrectPhone)
        } else {
            $(this).attr('disabled', true);
            registerByPhone('king', $('#RegisterForm'), function (){
                wrapperForm.addClass(active);
                $(".successBlock").removeClass("hidden");
                timer();
            }, function (){
                $(this).attr('disabled', false);
            }.bind(this));
        }
    });

    function showFildError(parrentBlock, errorText) {
        parrentBlock.addClass(errorClassEffect);
        parrentBlock.children(".bl_form__errors").addClass(active).html(errorText);
    }

    function clearFildError(fild) {

        fild.parent(".bl_form__label").removeClass(errorClassEffect);
        fild.siblings(".bl_form__errors").removeClass(active).html("");
    }

    /// Generate Random Password  Closet ???

    $('#RegisterForm_password').val(generate(6));

    function generate(len) {
        var ints = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9];
        var chars = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
        var out = '';
        for (var i = 0; i < len; i++) {
            var ch = Math.random(1, 2);
            if (ch < 0.5) {
                var ch2 = Math.floor(Math.random(1, ints.length) * 10);
                out += ints[ch2];
            } else {
                var ch2 = Math.floor(Math.random(1, chars.length) * 10);
                out += chars[ch2];
            }
        }
        return out;
    }


    /////////////// TIMER


    function incrementAttemptCounter() {
        var currentKey = localStorage.getItem('attemptCounter');
        if (currentKey === null) {
            currentKey = 0;
        }
        currentKey = Number(currentKey) + 1 ;
        console.log("currentKey = " + currentKey);
        localStorage.setItem('attemptCounter', currentKey);
    }


    function getAttemptCounter() {
        return localStorage.getItem('attemptCounter');
    }


    function timer() {
        var m = $('.timer_minutes'),
            s = $(".timer_sec");


        var startM = 0,
            startS = 59; ///////////// 59

        var currentIteration = +getAttemptCounter(); //// If user 3-rd times push button send sms

        if (currentIteration > 3) {
            startM = 9;
        }


        function printNumbers(from, to) {
            let current = from;

            let timerId = setInterval(function () {
                s.text(current);


                if (startM === 0) {
                    if (current === to) {
                        clearInterval(timerId);
                        $(".block_timer").addClass('hidden');
                        $(".repeatSend").removeClass("hidden");
                    }
                    current--;
                } else {

                    if (startM > 0) {

                        if(current<=0){
                            current = 59;
                            startM--;
                            m.text(startM);
                        }

                        if ( (current === to) && (startM <= 0) ) {
                            $(".block_timer").addClass('hidden');
                            $(".repeatSend").removeClass("hidden");
                        }
                        current--;
                    }


                }


            }, 1000);
        }


        m.text(startM);
        printNumbers(startS, 0);
    }




    //  No scroll FOR SAFARI

    $('body').on('touchmove', function(e) {
        // this is the node the touchmove event fired on
        // in this example it would be the </p> element
        target = e.target;

        // we need to find the parent container
        // we get it like so; assumes div as parent
        parent = $(e.target).closest('div');

        // check if the parent is a scroll window by class //
        if ($(parent).hasClass('scroll')){
            // ignore as we want the scroll to happen
        } else {
            e.preventDefault();
        }
    });





//* Orientation device  ---- Это фигня не работает для Safari *//

    var popup = document.querySelector(".bl_popupClear");

    if ((screen.orientation.angle === 90) || (screen.orientation.angle === 270)) {
        popup.classList.remove("hidden");
    }

    window.addEventListener("orientationchange", function (e) {

        if ((screen.orientation.angle === 0) || (screen.orientation.angle === 360)) {
            popup.classList.add("hidden");
        } else {
            popup.classList.remove("hidden");
        }
    }, false);





};



