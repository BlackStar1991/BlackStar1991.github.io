// jshint esnext:true
window.onload = function () {

    var
        body = $("body"),
        hidden = "hidden",
        active = "active",
        coverLayer = $(".coverLayer"),
        blockBadSpin = $(".bl_badSpin"),
        blockPopup = $(".bl_popup"),
        btnClosePopup = $(".btn_close__badSpin");
    var btn_sad = $(".btn_sad"),
        btn_bonus = $(".btn_bonus").eq(0);


    function closeAllPopup(coverLayer, currentPopup) {
        coverLayer.addClass(hidden).removeClass("coverLayer_animation");
        currentPopup.addClass(hidden);
        // btn_sad.removeClass(active)
    }

    btnClosePopup.on("click", function () {
        closeAllPopup(coverLayer, blockBadSpin);
        // btn_sad.removeClass(active);
    });


    coverLayer.on("click", function () {
        closeAllPopup(coverLayer, blockBadSpin);
        closeAllPopup(coverLayer, blockPopup);
    });


    /// PARALAX

    if (body.width() > 1200) {


        var $poster = $('.bl_badSpin__wrapper'),

            w = $(window).width(), //window width
            h = $(window).height(); //window height

        $(window).on('mousemove', function (e) {
            var offsetX = 0.5 - e.pageX / w, //cursor position X
                offsetY = 0.5 - e.pageY / h, //cursor position Y
                dy = e.pageY - h / 2, //@h/2 = center of poster
                dx = e.pageX - w / 2, //@w/2 = center of poster
                theta = Math.atan2(dy, dx), //angle between cursor and center of poster in RAD
                angle = theta * 180 / Math.PI - 90, //convert rad in degrees
                offsetPoster = $poster.data('offset'),
                transformPoster = 'translateY(' + -offsetX * offsetPoster + 'px) rotateX(' + (-offsetY * offsetPoster) + 'deg) rotateY(' + (offsetX * (offsetPoster * 2)) + 'deg)'; //poster transform

            //get angle between 0-360
            if (angle < 0) {
                angle = angle + 360;
            }

            //poster transform
            $poster.css('transform', transformPoster);

        });
    }

    function changeRegisterMethod(btn, fild) {
        btn.on("click", function () {
            $(".bl_form__text").removeClass(active);
            $(this).addClass(active);
            $(".bl_form__label").addClass(hidden);
            fild.removeClass(hidden);
        });
    }

    changeRegisterMethod($(".btn_email"), $(".label_email"));
    changeRegisterMethod($(".btn_tel"), $(".label_phone"));


    /// Simple Validation

    var errorMessage = {
        emptyFild: "Поле должно быть заполнено",
        littleNumber: "Это не похоже на телефон",
        incorrectEmail: "Поле email должно быть заполненно корректно",
        incorrectTel: "Поле телефона должно содержать только цифры",
    };
    var statusEmail = false,
        statusTel = false;

    var errorClassEffect = "errorClassEffect";

    $(".js-input-email").on("blur", function () {

        var fild = $(this),
            fildValue = fild.val(),
            checkReg = isValidEmailAddress(fildValue),
            parrentBlock = fild.parent(".bl_form__label"),
            valueLength = fild.val().length;

        if (valueLength === 0) {
            showFildError(parrentBlock, errorMessage.emptyFild)
        } else if (checkReg !== true) {
            showFildError(parrentBlock, errorMessage.incorrectEmail);
        } else {
            statusEmail = true;
            return statusEmail;
        }
        setTimeout(function () {
            clearFildError(fild)
        }, 3000);

    });


    $(".js-input-tel").on("blur", function () {

        var fild = $(this),
            fildValue = fild.val(),
            parrentBlock = fild.parent(".bl_form__label"),
            valueLength = fild.val().length;

        if (valueLength === 0) {
            showFildError(parrentBlock, errorMessage.emptyFild)
        } else if (valueLength < 7) {
            showFildError(parrentBlock, errorMessage.littleNumber)
        } else {
            statusTel = true;
            return statusTel;
        }
        setTimeout(function () {
            clearFildError(fild)
        }, 3000);

    });

    ///////// SUBMIT FORM


    $(".btn_submitForm").submit(function (e) {

        e.preventDefault();

        // check if the input is valid

        // FOR formForBusiness
        if ($(this).hasClass("js-formForBusiness")) {
            if ((statusEmail === true) && (statusTel === true)) status = true;
            return status;
        }

        /// ТУТ идет отправка формы
        // if (status === true) {
        //     $(".bl_form").submit();
        // }

    });



    function showFildError(parrentBlock, errorText) {
        parrentBlock.addClass(errorClassEffect);
        parrentBlock.children(".bl_form__errors").addClass(active).html(errorText);
    }


    function isValidEmailAddress(emailAddress) {
        var pattern = new RegExp(
            /^(("[\w-\s]+")|([\w-]+(?:\.[\w-]+)*)|("[\w-\s]+")([\w-]+(?:\.[\w-]+)*))(@((?:[\w-]+\.)*\w[\w-]{0,66})\.([a-z]{2,6}(?:\.[a-z]{2})?)$)|(@\[?((25[0-5]\.|2[0-4][0-9]\.|1[0-9]{2}\.|[0-9]{1,2}\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\]?$)/i
        );
        return pattern.test(emailAddress);
    }

    $(".js-input-tel").bind("change keyup input click", function () {
        if (this.value.match(/[^0-9+#*]/g)) {
            this.value = this.value.replace(/[^0-9+#*]/g, '');
        }

    });

    function clearFildError(fild) {
        fild.parent(".bl_form__label").removeClass(errorClassEffect);
        fild.siblings(".bl_form__errors").removeClass(active).html("");
    }


    /// RANDOM Number

    function randomInteger(min, max) {
        var rand = min - 0.5 + Math.random() * (max - min + 1)
        rand = Math.round(rand);
        return rand;
    }

    ///// COUNTER
    var currency = "₽ ";

    if($(".canvas_counter").attr('data-counter') !=="rub"){
        currency = "₴ ";
    }

    var canvas = document.querySelector('canvas');
        canvas.width = 190;
        canvas.height = 30;
    var ctx = canvas.getContext('2d');

    ctx.font="18px Rubik-Bold";
    ctx.fillStyle = "#fff";
    ctx.textAlign = 'center';
    ctx.textBaseline = 'middle';

    if (body.width() <= 1290) {
        ctx.font="14px Rubik-Bold";
    }

    if (body.width() <= 450) {
        ctx.font="10px Rubik-Bold";
    }

    var counter = 0;
    var counterText = 1248565;


    redraw();
    function redraw(){
        ctx.clearRect(0, 0, canvas.width, canvas.height);

        counter = randomInteger(2, 10);
        counterText = counterText + counter;
        ctx.fillText(currency + counterText,90,14);
        return counterText
    }

        setInterval(redraw, 1000);


    /////////// ANIMATION

    var results = {
        machine1: document.querySelector('#machine1Result'),
        machine2: document.querySelector('#machine2Result'),
        machine3: document.querySelector('#machine3Result')
    };
    var el1 = document.querySelector('#machine1');
    var el2 = document.querySelector('#machine2');
    var el3 = document.querySelector('#machine3');


    var finishedNumber1 = randomInteger(1,7),
        finishedNumber2 = randomInteger(1,7),
        finishedNumber3 = randomInteger(1,7);


    var machine1 = new SlotMachine(el1, {
        active: 1,  //////// Star position 1 drum
        spins: 4,
        direction: "down",
        delay: 500,


        randomize() {
            return finishedNumber1;
        }
    });
    var machine2 = new SlotMachine(el2, {
        active: 4,  //////// Star position 2 drum
        spins: 4,
        delay: 500,
        direction: "down",
        randomize() {
            return finishedNumber2;
        }
    });

    var machine3 = new SlotMachine(el3, {
        active: 3,  //////// Star position 3 drum
        spins: 4,
        delay: 500,
        direction: "down",
        randomize() {
            return finishedNumber3;
        }
    });

    var btnStart = $(".js-start");


    btnStart.on("click", function () {


        var timeStep1 = 4000,
            timeStep2 = 2500;


        /////////////

        if ($(this).hasClass("firstStepFinished")) {

            stepTwo();
        } else {
            stepOne();
        }


        function stepOne() {
            machine1.shuffle(7);
            machine2.shuffle(4);
            machine3.shuffle(3);

            setTimeout(function () {
                btn_sad.addClass(active);
                coverLayer.removeClass(hidden).addClass("coverLayer_animation");
                $(".bl_badSpin").removeClass(hidden);
                $(".js-start").addClass("firstStepFinished");

            }, timeStep1);
        }


        ////////
        function stepTwo() {

            finishedNumber1 = 2;
            finishedNumber2 = 2;
            finishedNumber3 = 2;

            machine1.shuffle(5);
            machine2.shuffle(6);
            machine3.shuffle(7);

            setTimeout(function () {
                btn_bonus.addClass(active);
                setTimeout(showPopup, 2000);

            }, timeStep2);
        }

        function showPopup() {
            coverLayer.removeClass(hidden).addClass("coverLayer_animation");
            blockPopup.removeClass(hidden)
        }

    });


};

